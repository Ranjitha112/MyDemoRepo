version: 0.2

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo "alias shopt='/usr/bin/shopt'" >> ~/.bashrc
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --client
  
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com
      - TAG=$(date +%Y-%m-%d.%H.%M.%S)-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)
      # Configure kubectl to use your EKS cluster
      #- aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name cicd-demo
      #- echo check config
      #- kubectl config view --minify
      #- echo check kubectl access
      - mkdir -p $HOME/.kube
      - echo "$KUBECONFIG_DATA" > $HOME/.kube/config
      - export KUBECONFIG=$HOME/.kube/config
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name cicd-demo
      - kubectl config view

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - echo "Tagging Docker image..."
      #- docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_REPO_NAME:$TAG

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_REPO_NAME:$TAG
      - echo Writing image definitions file...
      - printf '[{"name":"$IMAGE_REPO_NAME","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - sed -i 's@CONTAINER_IMAGE@'"$AWS_ACCOUNT_ID.dkr.ecr.ap-south-1.amazonaws.com/$IMAGE_REPO_NAME:$TAG"'@' deployment.yaml
      - kubectl apply -f deployment.yaml
      - kubectl apply -f service.yaml

artifacts:
    files: imagedefinitions.json